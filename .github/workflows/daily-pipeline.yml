name: daily-pipeline

on:
  schedule:
    - cron: '0 11 * * *'   # 每天 UTC 11:00（北京时间 19:00）
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install "pyarrow<19" -U

      - name: Compute dates (UTC)
        id: dates
        run: echo "YESTERDAY=$(date -u -d '1 day ago' +%F)" >> $GITHUB_OUTPUT

      - name: Run scraper
        run: |
          mkdir -p data
          python scripts/scrape.py \
            --max-reviews 2000 \
            --batch-size 200 \
            --since "${{ steps.dates.outputs.YESTERDAY }}" \
            --out "data/raw_${{ steps.dates.outputs.YESTERDAY }}.csv"

      - name: Load to Snowflake (STAGING)
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          LATEST=$(ls -t data/raw_*.csv | head -n 1)
          echo "Loading $LATEST ..."
          python scripts/load_to_snowflake.py --csv "$LATEST"

      - name: Transform in Snowflake
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: python scripts/run_transform.py

      - name: Upload CSV artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: scraped-csv
          path: data/*.csv
          if-no-files-found: ignore

